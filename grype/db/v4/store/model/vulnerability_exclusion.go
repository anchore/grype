package model

import (
	v4 "github.com/anchore/grype/grype/db/v4"
)

const (
	VulnerabilityExclusionTableName    = "vulnerability_exclusion"
	GetVulnerabilityExclusionIndexName = "get_vulnerability_exclusion_index"
)

// VulnerabilityExclusionModel is a struct used to serialize db.VulnerabilityExclusion information into a sqlite3 DB.
type VulnerabilityExclusionModel struct {
	PK            uint64 `gorm:"primary_key;auto_increment;"`
	ID            string `gorm:"column:id index:get_vulnerability_exclusion_index"`
	Namespace     string `gorm:"column:namespace; index:get_vulnerability_exclusion_index"`
	Constraint    string `gorm:"column:constraint"`
	Justification string `gorm:"column:justification"`
}

// NewVulnerabilityExclusionModel generates a new model from a db.VulnerabilityExclusion struct.
func NewVulnerabilityExclusionModel(vulnerabilityExclusion v4.VulnerabilityExclusion) VulnerabilityExclusionModel {
	return VulnerabilityExclusionModel{
		ID:            vulnerabilityExclusion.ID,
		Namespace:     vulnerabilityExclusion.Namespace,
		Constraint:    vulnerabilityExclusion.Constraint,
		Justification: vulnerabilityExclusion.Justification,
	}
}

// TableName returns the table which all db.VulnerabilityExclusion model instances are stored into.
func (VulnerabilityExclusionModel) TableName() string {
	return VulnerabilityExclusionTableName
}

// Inflate generates a db.VulnerabilityExclusion object from the serialized model instance.
func (m *VulnerabilityExclusionModel) Inflate() (v4.VulnerabilityExclusion, error) {
	return v4.VulnerabilityExclusion{
		ID:            m.ID,
		Namespace:     m.Namespace,
		Constraint:    m.Constraint,
		Justification: m.Justification,
	}, nil
}
